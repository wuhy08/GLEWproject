#!/usr/bin/env python

import rospy
import sys
import math
from geometry_msgs.msg import Pose2D
from geometry_msgs.msg import Twist
from std_msgs.msg import Bool
import numpy as np

from move_zumy.srv import AStarSolver

if __name__== '__main__':

    pose_start = Pose2D(3.0, 2.0, 0)
    pose_goal = Pose2D(80.0, 8.0, 0)

    zumy1 = Pose2D(30.0, 2.0, 0.0)
    # zumy2 = Pose2D(25.0, 25.0, 0.0)

    # print pose1.x

    rospy.init_node('test_service_node')
    
    rospy.wait_for_service('astar_solver')

    astar = rospy.ServiceProxy('astar_solver', AStarSolver)
    # print astar([zumy1, zumy2], pose_start, pose_goal)
    print astar([zumy1], pose_start, pose_goal)

    # name = 'zumyBML3'
    # test_pub = rospy.Publisher('/%s/cmd_vel' % name, Twist, queue_size=2, latch=True)
    # the_speed = Twist()
    # rate = rospy.Rate(0.001)
    # the_speed.linear.x = float(sys.argv[1])
    # the_speed.linear.y = 0
    # the_speed.linear.z = 0
    # the_speed.angular.x = 0
    # the_speed.angular.y = 0
    # the_speed.angular.z = 0

    # while not rospy.is_shutdown():
    #     test_pub.publish(the_speed)
    #     rate.sleep()
